{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreeya.dikshit\\\\Documents\\\\React Learning Projects\\\\Meal Delivery\\\\src\\\\components\\\\Meal\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AvailableMeals() {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-6555a-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 43\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AvailableMeals, \"MXeUFGIFOnEUoWu4dmzRaKQ9w1Q=\");\n\n_c = AvailableMeals;\n;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/shreeya.dikshit/Documents/React Learning Projects/Meal Delivery/src/components/Meal/AvailableMeals.js"],"names":["React","useEffect","useState","classes","Card","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","MealsLoading","MealsError","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAGA,SAASC,cAAT,GAA0B;AAAA;;AAEpB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACO,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AAGFD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;;AAEA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACf,cAAM,IAAIC,KAAJ,CAAW,uBAAX,CAAN;AACD;;AACD,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA+B;AAC7BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,KApBH;;AAsBEG,IAAAA,UAAU,GAAGc,KAAb,CAAoBC,KAAD,IAAW;AAC5BlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACgB,KAAK,CAACC,OAAP,CAAZ;AACD,KAHD;AAIH,GA3BQ,EA2BP,EA3BO,CAAT;;AA6BD,MAAIpB,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEN,OAAO,CAAC2B,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAInB,SAAJ,EAAe;AACd,wBACE;AAAS,MAAA,SAAS,EAAER,OAAO,CAAC4B,UAA5B;AAAA,6BACE;AAAA,kBAAIpB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAEA,QAAMqB,SAAS,GAAGzB,KAAK,CAAC0B,GAAN,CAAWC,IAAD,iBAAW,QAAC,QAAD;AACvC,IAAA,EAAE,EAAEA,IAAI,CAACX,EAD8B;AAGvC,IAAA,IAAI,EAAEW,IAAI,CAACV,IAH4B;AAIvC,IAAA,WAAW,EAAEU,IAAI,CAACT,WAJqB;AAKvC,IAAA,KAAK,EAAES,IAAI,CAACR;AAL2B,KAElCQ,IAAI,CAACX,EAF6B;AAAA;AAAA;AAAA;AAAA,UAArB,CAAlB;AASA,sBACC;AAAS,IAAA,SAAS,EAAEpB,OAAO,CAACI,KAA5B;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI;AAAA,kBACKyB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADD;AAWF;;GAxEQ1B,c;;KAAAA,c;AAwER;AAED,eAAeA,cAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport classes from './AvailableMeals.module.css';\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\n\r\n\r\nfunction AvailableMeals() {\r\n\r\n      const [meals,setMeals] = useState([]);\r\n      const [isLoading,setIsLoading] = useState(true);\r\n      const [httpError, setHttpError] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n      const fetchMeals = async () => {\r\n        const response = await fetch('https://react-http-6555a-default-rtdb.firebaseio.com/meals.json');\r\n\r\n        if(!response.ok) {\r\n          throw new Error ('Something went wrong!');\r\n        }\r\n        const responseData = await response.json();\r\n        \r\n        const loadedMeals = [];\r\n\r\n        for(const key in responseData) {\r\n          loadedMeals.push({\r\n            id: key,\r\n            name: responseData[key].name,\r\n            description: responseData[key].description,\r\n            price: responseData[key].price\r\n          });\r\n        }\r\n        setMeals(loadedMeals);\r\n        setIsLoading(false);\r\n        }\r\n        \r\n        fetchMeals().catch((error) => {\r\n          setIsLoading(false);\r\n          setHttpError(error.message);\r\n        });\r\n    },[]);\r\n\r\n   if (isLoading) {\r\n     return (\r\n       <section className={classes.MealsLoading}>\r\n         <p>Loading...</p>\r\n       </section>\r\n     );\r\n   }\r\n\r\n   if (httpError) {\r\n    return (\r\n      <section className={classes.MealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n   const mealsList = meals.map((meal) => (<MealItem\r\n   id={meal.id}\r\n   key={meal.id}\r\n   name={meal.name}\r\n   description={meal.description}\r\n   price={meal.price}\r\n   /> \r\n   ));\r\n\r\n   return (\r\n    <section className={classes.meals}>\r\n        <Card>\r\n            <ul>\r\n                {mealsList}\r\n            </ul>\r\n        </Card>\r\n    </section>\r\n    \r\n  );\r\n\r\n};\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}